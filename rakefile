###
# wxRuby3 rake file
# Copyright (c) M.J.N. Corino, The Netherlands
###

# Influential environment variables
# WXRUBY_DEBUG      : build a debug version if set to '1' (else build release version)
# WXRUBY_TRACE      : define trace level (default 0 if undefined or 1 if defined but empty) for debug build
# WXRUBY_VERBOSE    : define verbosity for (rake) build scripts
# WXRUBY_VERSION    : define the version info (x.x.x) for this tree
# WXRUBY_NO_UNICODE : try and build an ANSI version if set to '1'
# WXRUBY_EXCLUDED   : exclude certain classes from being compiled, even if present
#
# WXWIN             : install folder of wxWidgets library if not system default
# WXXML             : folder containing doxygen generated wxWidgets XML interface specs if not using wxRuby bootstrap

# Determine or set version of wxRuby library
require './rakelib/rakeversion'

require './rakelib/rakeconfigure'

if $config.has_wxwidgets_xml?

  require "./rakelib/rakewx"

  # Redcloth library is required to build the documentation, but not
  # required just to compile the lib.
  begin
    require "./rakelib/rakedocs"
  rescue LoadError # documentation tasks will not be available
  end

  # Rubygems library is required to build a gem, but not just to compile
  # the lib.
  begin
    require "./rakelib/rakepackage"
  rescue LoadError # package tasks will not be available
  end

  #############################
  # public tasks

  if Object.respond_to?(:create_release_tasks, true)
    create_release_tasks
  end

  desc "Create the binary Ruby library file"
  task :default => [enum_list, *all_default_targets]

  desc "Compile object files from SWIG-generated sources"
  task :compile => all_compile_targets

  desc "Force a compile of object files from C++ sources"
  task :recompile => [:clean, :compile]

  desc "Delete SWIG interfaces, C++ sources, library and object files"
  task :clean_all => [:clean, :clean_src, *all_clean_targets] do
    rm_if(Dir[File.join($config.interface_dir, '*')])
    rmdir_if($config.interface_dir)
    rm_if(Dir[File.join($config.common_dir, '*')])
    rmdir_if($config.common_dir)
    rm_if(Dir[File.join($config.classes_dir, '*')])
    rm_if(Dir[File.join($config.rake_deps_path, '.*.rake')])
    rmdir_if($config.rake_deps_path)
    rmdir_if($config.src_gen_dir)
    rmdir_if($config.src_dir)
  end

  desc "Delete C++ source and header files generated by SWIG"
  task :clean_src do
    rm_if(Dir[File.join($config.src_dir, '*.{cpp,h}')])
  end

  desc "Delete compiled libraries and object files"
  task :clean do
    rm_if(Dir[File.join($config.rb_lib_dir, '*.so')])
    rm_if(Dir[File.join($config.obj_dir, '*')])
    rmdir_if($config.obj_dir)
  end

  desc "Run a wxRuby app"
  task :run, [:app] do |t, args|
    Rake::Task[:default].invoke unless args.extras.include? ':nodep'
    $config.run args[:app]
  end

  desc "Debug a wxRuby app"
  task :debug, [:app]  do |t, args|
    Rake::Task[:default].invoke unless args.extras.include? ':nodep'
    $config.debug args[:app]
  end

  desc "Memory check a wxRuby app"
  task :memcheck, [:app]  do |t, args|
    Rake::Task[:default].invoke unless args.extras.include? ':nodep'
    $config.memcheck args[:app], gensup: args.extras.include?(':gensup')
  end

  desc "Run wxRuby tests"
  task :wxtest do |t,args|
    Rake::Task[:default].invoke unless args.extras.include? ':nodep'
    tests = args.extras - [':nodep']
    $config.test *tests
  end

  desc 'Run IRB for wxRuby'
  task :irb do |t,args|
    Rake::Task[:default].invoke unless args.extras.include? ':nodep'
    $config.irb
  end
else
  desc "Bootstrap the wxRuby3 build environment"
  task :bootstrap do
    $config.do_bootstrap
  end

  desc "Report need for bootstrap"
  task :default do
    STDERR.puts "The wxRuby3 'bootstrap' task needs to be run to set up the wxWidgets XML doxygen output!"
    exit(1)
  end
end
